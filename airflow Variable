from datetime import timedelta, datetime
from airflow import DAG
from airflow.operators.python_operator import PythonOperator
from airflow.utils.dates import days_ago
from airflow.models import Variable
import psycopg2
import pandas 

def read_csv():

    data_csv_1 = pandas.read_csv('/home/ammar/test/data_csv_1.csv', delimiter=';')
    data_csv_list=data_csv_1.values.tolist()
    Variable.set("data_csv", len(data_csv_list))
    print ("CSV file has beed read corecctly")




def write__in_data_base():

    choice=Variable.get("data_csv")
    
    if choice :

        data_csv_read = pandas.read_csv('/home/ammar/test/data_csv_1.csv', delimiter=';')
        data_csv=data_csv_read.values.tolist()

        conn=psycopg2.connect(user="postgres",
                password="Ammarqazaer79",
                host="localhost",
                port="5432",
                database="final_db")
        cur= conn.cursor()

        for count in data_csv:
            if len(count) == 8 :

                    for row in data_csv:
                        
                        PSQL = """INSERT INTO full_data_csv (Username, Identifier, One_time_password, Recovery_code, First_name, Last_name, Department, Location) VALUES (%s,%s,%s,%s,%s,%s,%s,%s) ON CONFLICT DO NOTHING"""
                        cur.execute(PSQL, row)
                    break
            else:

                    for row in data_csv:
                        PSQL = PSQL = """INSERT INTO part_data_csv (Username, Identifier, First_name, Last_name) VALUES (%s,%s,%s,%s) ON CONFLICT DO NOTHING"""
                        cur.execute(PSQL, row)
                    break


        conn.commit()
        conn.close()

    else:
        print("No data in CSV file ")
    
dag=DAG('print_data_from_csv', description='V1.0.0', 
        schedule_interval='0 * * * *',
        start_date=datetime(2022, 1, 25),    
        catchup=False
        )

check_CSV = PythonOperator(
    task_id='check_CSV',
    python_callable= read_csv,
    dag=dag
)

write_in_data_base = PythonOperator(
    task_id='write_in_data_base',
    python_callable= write__in_data_base,
    dag=dag
)

check_CSV >> write_in_data_base 
